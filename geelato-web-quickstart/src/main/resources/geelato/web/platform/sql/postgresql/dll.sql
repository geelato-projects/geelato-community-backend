-- 创建或修改视图
-- @sql postgresql_createOrReplaceView
CREATE OR REPLACE VIEW $.viewName AS $.viewSql;

-- 查询视图
-- @sql postgresql_queryViewsByName
SELECT definition FROM pg_views WHERE viewname = '$.viewName';

-- 删除视图，仅重命名视图
-- @sql postgresql_replaceView
ALTER VIEW $.viewName RENAME TO $.newViewName;

-- 查询所有表
-- @sql postgresql_queryAllTables
SELECT * FROM information_schema.tables WHERE table_schema = CURRENT_SCHEMA() AND table_type = 'BASE TABLE' $.condition ORDER BY table_name ASC;

-- 查看表的所有字段
-- @sql postgresql_queryColumnsByTableName
SELECT * FROM information_schema.columns WHERE table_schema = CURRENT_SCHEMA()
@if $.tableName!='' && $.tableName!=null
    AND TABLE_NAME = '$.tableName'
@/if
@if $.columnName!='' && $.columnName!=null
    AND COLUMN_NAME = '$.columnName'
@/if
ORDER BY ordinal_position ASC;

-- 查询指定表的唯一索引（排除主键）
-- @sql postgresql_queryUniqueIndexesByTableName
SELECT
    i.relname AS IndexName,
    t.relname AS TableName,
    a.attname AS ColumnName
FROM pg_index idx
JOIN pg_class i ON idx.indexrelid = i.oid
JOIN pg_class t ON idx.indrelid = t.oid
JOIN pg_attribute a ON a.attnum = ANY(idx.indkey) AND a.attrelid = t.oid
WHERE t.relname = '$.tableName' AND idx.indisunique = true AND idx.indisprimary = false
ORDER BY i.relname, a.attnum;

-- 查询指定表的check约束
-- @sql postgresql_queryChecksByTableName
SELECT t.*
FROM
    (SELECT
        t1.CONSTRAINT_CATALOG,
        t1.CONSTRAINT_SCHEMA,
        t1.TABLE_SCHEMA,
        t1.TABLE_NAME,
        t1.CONSTRAINT_TYPE,
        t1.IS_DEFERRABLE AS ENFORCED,
        t1.CONSTRAINT_NAME,
        t2.CHECK_CLAUSE
    FROM information_schema.TABLE_CONSTRAINTS t1
    JOIN information_schema.CHECK_CONSTRAINTS t2 ON t1.CONSTRAINT_NAME = t2.CONSTRAINT_NAME
    WHERE t1.TABLE_SCHEMA = CURRENT_SCHEMA() AND t1.CONSTRAINT_TYPE = 'CHECK'
) t WHERE 1 = 1
@if $.tableName!='' && $.tableName!=null
    AND TABLE_NAME = '$.tableName'
@/if
@if $.constraintName!='' && $.constraintName!=null
    AND CONSTRAINT_NAME = ANY(STRING_TO_ARRAY('$.constraintName', ','))
@/if

-- 创建表
-- @sql postgresql_createTable
@for i in $.delCheckList
    ALTER TABLE $.delCheckList[i].tableName DROP CONSTRAINT $.delCheckList[i].constraintName;
@/for
CREATE TABLE IF NOT EXISTS $.tableName (
    @for i in $.addList
        `$.addList[i].name` $.addList[i].type
        @if !$.addList[i].nullable
            NOT NULL
        @/if
        @if $.addList[i].defaultValue!='' && $.addList[i].defaultValue!=null
            @if $.addList[i].dataType=='BIT'
                DEFAULT $.addList[i].defaultValue
            @/if
            @if $.addList[i].dataType!='BIT'
                DEFAULT '$.addList[i].defaultValue'
            @/if
        @/if
        @if $.addList[i].autoIncrement
            GENERATED BY DEFAULT AS IDENTITY
        @/if
        @if $.addList[i].comment!='' && $.addList[i].comment!=null
            -- $.addList[i].comment
        @/if
        @if i<$.addList.length-1
        ,
        @/if
    @/for
    @if $.primaryKey!='' && $.primaryKey!=null
    ,
    PRIMARY KEY ($.primaryKey)
    @/if
    @if $.uniqueList.length>0
    ,
    @/if
    @for i in $.uniqueList
        @if $.hasDelStatus
            UNIQUE (`$.uniqueList[i].name`, `del_status`, `delete_at`)
        @/if
        @if !$.hasDelStatus
            UNIQUE (`$.uniqueList[i].name`)
        @/if
        @if i<$.uniqueList.length-1
        ,
        @/if
    @/for
    @for i in $.checkList
        CONSTRAINT `$.checkList[i].code` CHECK ($.checkList[i].checkClause)
        @if i<$.checkList.length-1
        ,
        @/if
    @/for
);

-- 更新表
-- @sql postgresql_upgradeTable
@if $.tableTitle!='' && $.tableTitle!=null
  COMMENT ON TABLE $.tableName IS '$.tableTitle';
@/if
@for i in $.addList
ALTER TABLE $.tableName ADD COLUMN $.addList[i].name $.addList[i].type
  @if !$.addList[i].nullable
    NOT NULL
  @/if
  @if $.addList[i].defaultValue!='' && $.addList[i].defaultValue!=null
    @if $.addList[i].dataType=='BIT'
      DEFAULT $.addList[i].defaultValue
    @/if
    @if $.addList[i].dataType!='BIT'
      DEFAULT '$.addList[i].defaultValue'
    @/if
  @/if
  @if $.addList[i].comment!='' && $.addList[i].comment!=null
    -- $.addList[i].comment
  @/if
;
@/for
@for i in $.changeList
ALTER TABLE $.tableName ALTER COLUMN $.changeList[i].befColName TYPE $.changeList[i].type
    @if !$.changeList[i].nullable
      SET NOT NULL
    @/if
    @if $.changeList[i].defaultValue!='' && $.changeList[i].defaultValue!=null
      @if $.changeList[i].dataType=='BIT'
        DEFAULT $.changeList[i].defaultValue
      @/if
      @if $.changeList[i].dataType!='BIT'
        DEFAULT '$.changeList[i].defaultValue'
      @/if
    @/if
;
ALTER TABLE $.tableName RENAME COLUMN $.changeList[i].befColName TO $.changeList[i].name;
@/for
@for i in $.modifyList
ALTER TABLE $.tableName ALTER COLUMN $.modifyList[i].name TYPE $.modifyList[i].type
    @if !$.modifyList[i].nullable
      SET NOT NULL
    @/if
    @if $.modifyList[i].defaultValue!='' && $.modifyList[i].defaultValue!=null
      @if $.modifyList[i].dataType=='BIT'
        DEFAULT $.modifyList[i].defaultValue
      @/if
      @if $.modifyList[i].dataType!='BIT'
        DEFAULT '$.modifyList[i].defaultValue'
      @/if
    @/if
;
@/for
@for i in $.indexList
    DROP INDEX `$.indexList[i].keyName`;
@/for
@if $.primaryKey!='' && $.primaryKey!=null
    ALTER TABLE $.tableName DROP CONSTRAINT [PK_$.tableName];
    ALTER TABLE $.tableName ADD CONSTRAINT [PK_$.tableName] PRIMARY KEY ($.primaryKey);
@/if
@for i in $.uniqueList
    @if $.hasDelStatus
        ALTER TABLE $.tableName ADD CONSTRAINT `UQ_$.uniqueList[i].name` UNIQUE (`$.uniqueList[i].name`, `del_status`, `delete_at`);
    @/if
    @if !$.hasDelStatus
        ALTER TABLE $.tableName ADD CONSTRAINT `UQ_$.uniqueList[i].name` UNIQUE (`$.uniqueList[i].name`);
    @/if
@/for
@for i in $.delCheckList
    ALTER TABLE $.delCheckList[i].tableName DROP CONSTRAINT $.delCheckList[i].constraintName;
@/for
@for i in $.checkList
    ALTER TABLE $.checkList[i].tableName ADD CONSTRAINT `$.checkList[i].code` CHECK ($.checkList[i].checkClause);
@/for

-- 模型变更，表名变更，表重命名
-- @sql postgresql_renameTable
ALTER TABLE $.entityName RENAME TO $.newEntityName;
COMMENT ON TABLE $.entityName IS '$.newComment';

-- 字段变更，删除字段时
-- @sql postgresql_renameColumn
ALTER TABLE $.tableName RENAME COLUMN $.name TO $.newName;
ALTER TABLE $.tableName
ALTER COLUMN $.newName TYPE $.type,
@if !$.nullable
    ALTER COLUMN $.newName SET NOT NULL,
@/if
@if $.defaultValue!='' && $.defaultValue!=null
    ALTER COLUMN $.newName SET DEFAULT '$.defaultValue';
@/if
@if $.comment!='' && $.comment!=null
    COMMENT ON COLUMN $.tableName.$.newName IS '$.comment';
@/if

-- 获取数据库表外键信息
-- @sql postgresql_queryForeignsByTableName
SELECT
    t.CONSTRAINT_CATALOG,
    t.CONSTRAINT_SCHEMA,
    t.CONSTRAINT_NAME,
    t.CONSTRAINT_TYPE,
    t.ENFORCED,
    t.TABLE_SCHEMA,
    t.TABLE_NAME,
    k.COLUMN_NAME,
    k.REFERENCED_TABLE_SCHEMA,
    k.REFERENCED_TABLE_NAME,
    k.REFERENCED_COLUMN_NAME,
    r.UPDATE_RULE,
    r.DELETE_RULE
FROM information_schema.TABLE_CONSTRAINTS t
LEFT JOIN information_schema.KEY_COLUMN_USAGE k ON t.TABLE_SCHEMA = k.TABLE_SCHEMA AND t.CONSTRAINT_NAME = k.CONSTRAINT_NAME
LEFT JOIN information_schema.REFERENTIAL_CONSTRAINTS r ON k.TABLE_SCHEMA = r.CONSTRAINT_SCHEMA AND k.CONSTRAINT_NAME = r.CONSTRAINT_NAME
WHERE 1 = 1
  AND t.CONSTRAINT_TYPE = 'FOREIGN KEY'
  AND t.TABLE_SCHEMA = CURRENT_SCHEMA()
  AND t.TABLE_NAME = '$.tableName';
